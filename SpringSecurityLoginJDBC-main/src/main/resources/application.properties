#server.servlet.context-path=/ct
#spring.mvc.servlet.path=/app
spring.security.user.name=x1
spring.security.user.password=x1
spring.security.user.roles=admin
server.port=6062
spring.thymeleaf.cache=false

# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "mycontact"
spring.datasource.url=jdbc:mariadb://10.72.99.23:8889/xspring1?characterEncoding=UTF-8

# MySQL username and password 
spring.datasource.username=myuser1
spring.datasource.password=mypwd1



spring.jpa.hibernate.use-new-id-generator-mappings=false
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=create-drop
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect